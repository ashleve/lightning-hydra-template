# @package _global_

# to execute this experiment run:
# python train.py +experiment=exp_example_with_paths

defaults:
    - override /trainer: null                           # override trainer to null so it's not loaded from main config defaults
    - override /model: null                             # override model to null so it's not loaded from main config defaults
    - override /datamodule: null                        # override datamodel to null so it's not loaded from main config defaults
    - override /callbacks: null                         # override callbacks to null so it's not loaded from main config defaults
    - override /logger: null                            # override logger to null so it's not loaded from main config defaults

# we override default configurations with nulls to prevent them from loading at all - instead we define all modules
# and their paths directly in this config so everything is stored in one place and we have more readibility

seed: 12345

trainer:
    _target_: pytorch_lightning.Trainer
    min_epochs: 1
    max_epochs: 10
    gradient_clip_val: 0.5
    weights_summary: null
    gpus: 0

model:
    _target_: src.models.mnist_model.LitModelMNIST
    optimizer: adam
    lr: 0.001
    weight_decay: 0.000001
    architecture: SimpleDenseNet
    input_size: 784
    lin1_size: 256
    dropout1: 0.30
    lin2_size: 256
    dropout2: 0.25
    lin3_size: 128
    dropout3: 0.20
    output_size: 10

datamodule:
    _target_: src.datamodules.mnist_datamodule.MNISTDataModule
    data_dir: ${data_dir}
    batch_size: 64
    train_val_test_split: [55_000, 5_000, 10_000]
    num_workers: 0
    pin_memory: False

callbacks:
    model_checkpoint:
        _target_: pytorch_lightning.callbacks.ModelCheckpoint
        monitor: "val_acc"
        save_top_k: 2
        save_last: True
        mode: "max"
        dirpath: 'checkpoints/'
        filename: 'sample-mnist-{epoch:02d}'
    early_stopping:
        _target_: pytorch_lightning.callbacks.EarlyStopping
        monitor: "val_acc"
        patience: 100
        mode: "max"
